"""Initial migration

Revision ID: 2c4d7d46d3a1
Revises: 
Create Date: 2023-09-18 17:04:18.128975

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2c4d7d46d3a1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ml_model',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('source', sa.String(length=512), nullable=True),
    sa.Column('kind', sa.String(length=64), nullable=True),
    sa.Column('description', sa.String(length=512), nullable=True),
    sa.Column('url_docs', sa.String(length=512), nullable=True),
    sa.Column('extra_params', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('model_category',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('description', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('bio', sa.String(length=512), nullable=True),
    sa.Column('avatar', sa.String(length=512), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('collection',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=512), nullable=True),
    sa.Column('image', sa.String(length=512), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('owner_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('model_category_association',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('model_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('category_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['model_category.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['ml_model.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prompt',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('prompt', sa.String(length=2048), nullable=True),
    sa.Column('negative_prompt', sa.String(length=2048), nullable=True),
    sa.Column('model', sa.String(length=64), nullable=True),
    sa.Column('sampler', sa.String(length=64), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('num_inference_steps', sa.Integer(), nullable=True),
    sa.Column('guidance_scale', sa.Integer(), nullable=True),
    sa.Column('num_images_per_prompt', sa.Integer(), nullable=True),
    sa.Column('generator', sa.Numeric(), nullable=True),
    sa.Column('strength', sa.Float(), nullable=True),
    sa.Column('owner_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('artwork',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('title', sa.String(length=64), nullable=True),
    sa.Column('image', sa.String(length=512), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('collection_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('owner_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('prompt_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['prompt_id'], ['prompt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('artwork')
    op.drop_table('prompt')
    op.drop_table('model_category_association')
    op.drop_table('collection')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('model_category')
    op.drop_table('ml_model')
    # ### end Alembic commands ###
