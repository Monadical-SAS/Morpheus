name: Check release
on:
  workflow_dispatch:
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm clean-install
      - name: Create version file
        run: |
          echo "na" > version.txt
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_GH_TOKEN }}
        run: npx semantic-release -d
      - name: Show version
        id: set_var
        run: |
          VERSION=$(cat version.txt)
          RELEASE_BRANCH=release-v$VERSION
          echo $VERSION
          echo $RELEASE_BRANCH

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "RELEASE_BRANCH=$RELEASE_BRANCH" >> $GITHUB_ENV

          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "RELEASE_BRANCH=$RELEASE_BRANCH" >> $GITHUB_OUTPUT
      - name: Clean repo
        if: ${{ steps.set_var.outputs.VERSION != 'na' }}
        run: |
          git checkout -- .
          git clean -df
      - name: Configure git
        if: ${{ steps.set_var.outputs.VERSION != 'na' }}
        run: |
          git config --local user.email "ci@monadical.com"
          git config --local user.name "CI monadical.com"
      - name: Checkout release branch
        if: ${{ steps.set_var.outputs.VERSION != 'na' }}
        run: |
          git checkout -b $RELEASE_BRANCH
      - name: Push changes to repo
        uses: ad-m/github-push-action@master
        if: ${{ steps.set_var.outputs.VERSION != 'na' }}
        with:
          github_token: ${{ secrets.SEMANTIC_RELEASE_GH_TOKEN }}
          branch: ${{ steps.set_var.outputs.RELEASE_BRANCH }}
