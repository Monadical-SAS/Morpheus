version: "3.8"
services:
  postgres:
    image: postgres:15-alpine
    env_file:
      - morpheus-server/secrets.env
    expose:
      - 5432
    ports:
      - 5432:5432
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 10

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - morpheus-server/secrets.env
    ports:
      - "8002:80"
    depends_on:
      postgres:
        condition: service_healthy

  api:
    build:
      context: morpheus-server
      dockerfile: ./Dockerfile
      args:
        - TAG=${TAG:-latest}
    image: morpheus-server:latest
    env_file:
      - morpheus-server/secrets.env
    command: python3 main.py
    volumes:
      - ./morpheus-server:/opt/api
    environment:
      - NODE_ENV=development
    ports:
      - "8001:8001"
    stdin_open: true
    tty: true
    depends_on:
      postgres:
        condition: service_healthy
      datalib:
        condition: service_completed_successfully

  datalib:
    build:
      context: morpheus-data
      dockerfile: ./Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    image: monadicalsas/morpheus-data:${TAG:-latest}
    volumes:
      - ./wheels:/wheels
      - ./morpheus-data:/app
    depends_on:
      postgres:
        condition: service_healthy

  client:
    build:
      context: morpheus-client
      dockerfile: ./Dockerfile
    image: morpheus-client:latest
    entrypoint: ./bin/entrypoint.sh
    volumes:
      - ./morpheus-client:/app
    environment:
      - NEXT_TELEMETRY_DISABLED=1
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true

  admin:
    build:
      context: morpheus-admin
      dockerfile: ./Dockerfile
    image: morpheus-admin:latest
    entrypoint: ./bin/entrypoint.sh
    volumes:
      - ./morpheus-admin:/app
    ports:
      - "3001:3001"
    stdin_open: true
    tty: true

  collaborative:
    build:
      context: morpheus-collaborative
      dockerfile: ./Dockerfile
    image: morpheus-collaborative:latest
    entrypoint: ./bin/entrypoint.sh
    volumes:
      - ./morpheus-collaborative:/app
    ports:
      - "3002:3002"
    stdin_open: true
    tty: true

  worker-ray:
    build:
      context: ./morpheus-worker
    # If you are using a mac, uncomment the args below
    # args:
    #   RAY_IMAGE_TAG: latest-gpu-aarch64
    image: morpheus-worker:latest
    env_file:
      - morpheus-worker/secrets.env
    command: bash start.sh
    ports:
      - "8000:8000"
      - "8265:8265"
    volumes:
      - sd_model:/mnt/
    depends_on:
      api:
        condition: service_started
    healthcheck:
      test: [ "CMD-SHELL", "ray status" ]
      interval: 5s
      timeout: 5s
      retries: 10
    # If you don't have a gpu, comment the deploy section below
    deploy:
      resources:
        reservations:
          devices:
            - count: 1
              capabilities: [ gpu ]

  worker-ray-deployer:
    image: morpheus-worker:latest
    command: bash -c "sleep 10 && ray job submit -- serve deploy models.yaml"
    environment:
      - RAY_ADDRESS=http://worker-ray:8265
    depends_on:
      worker-ray:
        condition: service_healthy

  model-script:
    build:
      context: morpheus-server
      dockerfile: ./scripts/models/Dockerfile
      args:
        - TAG=${TAG:-latest}
    image: morpheus-script-model:latest
    profiles: [ "manage" ]
    env_file:
      - morpheus-server/secrets.env
    volumes:
      - ./morpheus-server:/opt/api
    stdin_open: true
    tty: true
    depends_on:
      datalib:
        condition: service_completed_successfully

volumes:
  pg_data:
  sd_model:
    name: "models"
